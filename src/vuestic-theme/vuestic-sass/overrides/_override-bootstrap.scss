//Navbar
.navbar .navbar-nav > .nav-item > .nav-link {
  padding-right: 38px;
  padding-left: 38px;
  line-height: 0;
}

.navbar .navbar-nav > .nav-item {
  display: flex;
  align-items: center;
}

.navbar-text {
  color: $white;
}

//Typography
@mixin header-style($font-size, $margin-bottom) {
  font-size: $font-size;
  margin-top: $margin-bottom * 2;
  margin-bottom: $margin-bottom;
}

h1, .h1 {
  @include header-style(2.5rem, 2.25rem);
}

h2, .h2 {
  @include header-style(2rem, 2rem);
}

h3, .h3 {
  @include header-style(1.75rem, 1.5rem);
}

h4, .h4 {
  @include header-style(1.5rem, 1rem);
}

h5, .h5 {
  @include header-style(1.25rem, 0.5rem);
}

.blockquote {
  padding: 0 ($spacer *1.625);
  margin: 2.5rem 0 2.5rem 1rem;
  border-left: $blockquote-border-width solid $blockquote-border-color;
  line-height: 2rem;
  color: $blockquote-small-color;
  font-style: oblique;
}

.blockquote-footer {
  &::before {
    content: "--- "; // em dash, nbsp
  }
}

//Buttons

.vuestic-button {
  @include button-size(7px, 24px, 16px, 1.5, 24px);
  margin: 6px 8px;
  letter-spacing: 0.55px;
  color: white;
  font-family: $font-family-sans-serif;
  text-transform: initial;
  cursor: pointer;
}

$vuestic-colors: (
  success: (#63e5b3, #23e066, rgba(28, 173, 103, 0.6), #40e583, #d6ffd3),
  danger: (#ff7455, #e34b4a, rgba(137, 13, 12, 0.6), #e34b4a, #ffebeb),
  warning: (#ffd72d, #feb900, rgba(169, 124, 14, 0.6), #ffc202, #fff3d1),
  info: (#32b5e4, #2c82e0, rgba(10, 82, 117, 0.6), #2c82e0, #caeeff),
  gray: (#cdd0d5 #b4b6b9 rgba(104, 115, 125, 0.61) #babfc2 #e6e9ec),
  dark: (#576675, #34495e, #aebcca, #34495e, #afb6bb)
);

@each $name, $colors in $vuestic-colors {
  $gradient-color1: nth($colors, 1);
  $gradient-color2: nth($colors, 2);
  $box-shadow: nth($colors, 3);
  $border-color: nth($colors, 4);
  $hover-color: nth($colors, 5);

  .vuestic-button--#{$name} {
    background-image: none;
    box-shadow: none;
    border: 0 solid transparent;
  }

  .vuestic-button--#{$name}.vuestic-button--default{
    background-image: linear-gradient(to right, $gradient-color1, $gradient-color2);
    box-shadow: 0 2px 3px 0 $box-shadow;

    &:hover {
      background-image: linear-gradient(to right, lighten($gradient-color1, 15%), lighten($gradient-color2, 15%));
    }

    &:active, &:focus {
      background-image: linear-gradient(to right, darken($gradient-color1, 15%), darken($gradient-color2, 15%));
    }
  }

  .vuestic-button--#{$name}.vuestic-button--outline{
    border: solid 2px $border-color;
    color: $border-color;

    &:hover {
      background-color: $hover-color;
    }

    &:active, &:focus {
      background-color: $border-color;
      border: none;
    }
  }

  .vuestic-button--#{$name}.vuestic-button--flat{
    border: 0 solid transparent;
    color: $border-color;

    &:hover {
      background-color: $hover-color;
    }

    &:active, &:focus {
      background-color: $border-color;
      border: none;
    }

    &.disabled {
      opacity: 0.4;
    }
  }
}

.vuestic-button--large {
  @include button-size(12px, 32px, 20px, 1.3, 32px);
  letter-spacing: 0.7px;
  color: white;
}

.vuestic-button--large.vuestic-button--with-icon {
  padding-left: 24px;

  img {
    width: 32px;
    height: 26px;
    padding-right: 8px;
  }
}

.vuestic-button--small {
  @include button-size(2px, 16px, 14px, 1.43, 16px);
  letter-spacing: 0.5px;
  color: white;
}

.vuestic-button--small.vuestic-button--with-icon {
  padding-left: 8px;

  img {
    width: 18px;
    height: 20px;
    padding-right: 4px;
  }
}

.vuestic-button--normal {
  @include button-size(7px, 24px, 16px, 1.5, 24px);
  letter-spacing: 0.55px;
  color: white;
}

.vuestic-button--normal.vuestic-button--with-icon {
  padding-left: 16px;

  img {
    width: 28px;
    height: 24px;
    padding-right: 8px;
  }
}

.btn.btn-with-icon {
  position: relative;
  padding: $btn-padding-y $btn-with-icon-padding-x;
  .btn-with-icon-content {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: $btn-with-icon-text-margin;
  }

  i {
    position: absolute;
    left: $btn-with-icon-padding-x;
    top: $btn-with-icon-icon-top;
    font-size: $btn-with-icon-icon-size;
  }

  &.rounded-icon {
    width: $btn-with-icon-rounded-size;
    height: $btn-with-icon-rounded-size;
    border-radius: 50%;
    padding: 0;

    i {
      left: $btn-with-icon-rounded-icon-left;
    }

    &.btn-micro {
      height: $btn-with-icon-rounded-size-micro;
      width: $btn-with-icon-rounded-size-micro;
      flex: none;

      i {
        font-size: $btn-with-icon-rounded-font-micro;
        left: $btn-with-icon-rounded-position-left;
        top: $btn-with-icon-rounded-position-top;
      }
    }
  }
}

.btn-group {
  box-shadow: $btn-box-shadow;
  border-radius: $btn-border-radius;
  .btn {
    padding-left: $btn-group-button-padding-x;
    padding-right: $btn-group-button-padding-x;
    box-shadow: none;
  }
}

.btn.dropdown-toggle {
  position: relative;

  .arrow-down {
    position: absolute;
    font-size: $btn-dd-arrow-size;
    right: 1rem;
    top: calc(50% - #{$btn-dd-arrow-size} / 1.4);
  }

  &::after {
    display: none;
  }
}

.btn-group {
  color: $white;
}

// Dropdowns & Selects
.dropdown-menu {
  border-radius: 0;
  padding: $dropdown-menu-padding-y $dropdown-menu-padding-x;
  background: transparent;
  border: none;
  .dropdown-menu-content {
    background-color: $dropdown-background;
    box-shadow: $dropdown-box-shadow;
  }
}

.dropdown-item {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: $dropdown-item-height;
  font-size: $font-size-sm;
}

//Icons
.error-icon {
  display: inline-block;
  color: $theme-red;
}

.success-icon {
  display: inline-block;
  color: $vue-green;
}

//Tables
.table-striped {
  tbody tr:nth-of-type(odd) {
    background-color: $striped-row-odd;
  }
  tbody tr:nth-of-type(even) {
    background-color: $striped-row;
  }
}

.table-bordered {
  td, th {
    border: 1px solid $table-border-color;
  }
}

.table-hover {
  tbody tr {
    @include hover {
      background-color: $table-hover-bg;
    }
  }
}

.table {

  thead tr {
    border-bottom: 2px solid rgb(85, 85, 85);
    color: black;
    font-size: 14px;
    font-weight: bold;
    text-transform: uppercase;
  }

  td, th, thead th, thead td {
    vertical-align: middle !important;
    padding: .5rem;
  }

  .badge {
    vertical-align: text-top;
  }

  .table-info {
    background-color: #dcf1ff;
  }

  .table-warning {
    background-color: #fff1c8;
  }

  .table-success, .table-success > td, .table-success > th {
    background-color: #c8fac6;
  }

  .table-danger {
    background-color: #ffcece;
  }
}

.table-header-active {
  thead tr {
    color: $vue-green;
  }
}

.first-td-padding {
  td:first-child {
    @extend .pl-4;
  }
}

.sort-icon {
  float: none !important;
  margin-left: .2rem;
  top: 1px;
  font-size: 1rem;
}

th.sortable:hover {
  color: $vue-green !important;
  opacity: .6;
}

//Badges
@mixin badge-variant($bg) {
  color: $white;
  background-color: $bg;

  &[href] {
    @include hover-focus {
      color: $white;
      text-decoration: none;
      background-color: darken($bg, 10%);
    }
  }
}

.badge {
  min-width: $badge-min-width;
  display: inline-block;
  font-weight: bold;
  text-transform: uppercase;
  font-size: .625rem;
  color: $white;
  letter-spacing: .0625rem;
}

.badge-violet {
  @include badge-variant($theme-violet);
}

.badge-dark-blue {
  @include badge-variant($dark-blue);
}

.badge-success {
  @include badge-variant($badge-success-bg);
}

//Alerts

.alert {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;

  .badge {
    margin-right: 0.63rem;
  }

  &.with-close {
    padding-right: $with-close-pr;
  }

  .alert-close {
    position: absolute;
    right: 20px;
    font-size: $font-size-base;
    top: calc(50% - #{$font-size-base} / 2);
    cursor: pointer;
  }
}

.alert-success {
  box-shadow: $alert-success-shadow;

  .alert-close {
    color: $brand-primary;
  }
}

.alert-warning {
  box-shadow: $alert-warning-shadow;

  .alert-close {
    color: $brand-warning;
  }
}

.alert-danger {
  box-shadow: $alert-danger-shadow;

  .alert-close {
    color: $brand-danger;
  }
}

.alert-info {
  box-shadow: $alert-info-shadow;

  .alert-close {
    color: $brand-info;
  }
}

@function get-alert-def($type, $csspart) {
  @if $csspart == 'bg' {
    @if $type == 'success' {
      @return $alert-success-bg;
    } @else if $type == 'danger' {
      @return $alert-danger-bg;
    } @else if $type == 'warning' {
      @return $alert-warning-bg;
    } @else if $type == 'info' {
      @return $alert-info-bg;
    }

    @return theme-color-level($type, -10);
  } @else if $csspart == 'border' {
    @if $type == 'success' {
      @return $alert-success-border;
    } @else if $type == 'danger' {
      @return $alert-danger-border;
    } @else if $type == 'warning' {
      @return $alert-warning-border;
    } @else if $type == 'info' {
      @return $alert-info-border;
    }

    @return theme-color-level($type, -9);
  } @else if $csspart == 'color' {
    @if $type == 'success' {
      @return $alert-success-text;
    } @else if $type == 'danger' {
      @return $alert-danger-text;
    } @else if $type == 'warning' {
      @return $alert-warning-text;
    } @else if $type == 'info' {
      @return $alert-info-text;
    }

    @return theme-color-level($type, 6);
  }
}

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(get-alert-def($color, 'bg'), get-alert-def($color, 'border'), get-alert-def($color, 'color'));
  }
}
